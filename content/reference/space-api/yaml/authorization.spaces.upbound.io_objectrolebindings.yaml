---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: objectrolebindings.authorization.spaces.upbound.io
spec:
  group: authorization.spaces.upbound.io
  names:
    categories:
    - iam
    kind: ObjectRoleBinding
    listKind: ObjectRoleBindingList
    plural: objectrolebindings
    singular: objectrolebinding
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: |-
          A ObjectRoleBinding binds a namespaced API object to a set of subjects, at varying access levels.
          For now, there can be at most one ObjectRoleBinding pointing to each API object.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ObjectRoleBindingSpec is ObjectRoleBinding's spec.
            properties:
              object:
                description: |-
                  Object references the object to which the listed subjects should have access at varying levels.
                  The object value is immutable after creation.
                properties:
                  apiGroup:
                    description: |-
                      APIGroup defines the apiGroup of the object being pointed to.
                      With some minor differences, this is essentially matched as a DNS subdomain, like how Kubernetes validates it.
                      The Kubernetes legacy core group is denoted as "core".
                    maxLength: 64
                    pattern: ^[a-z][a-z0-9-]{0,61}[a-z0-9](\.[a-z][a-z0-9-]{0,61}[a-z0-9])*$
                    type: string
                    x-kubernetes-validations:
                    - message: apiGroup is immutable
                      rule: self == oldSelf
                    - message: apiGroup must be 'core' for now. This will change in
                        the future.
                      rule: self == 'core'
                  name:
                    description: |-
                      Name points to the .metadata.name of the object targeted.
                      Kubernetes validates this as a DNS 1123 subdomain.
                    maxLength: 253
                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                    type: string
                    x-kubernetes-validations:
                    - message: name is immutable
                      rule: self == oldSelf
                  resource:
                    description: |-
                      Resource defines the resource type (often kind in plural, e.g.
                      controlplanes) being pointed to.
                      With some minor differences, this is essentially matched as a DNS label, like how Kubernetes validates it.
                    maxLength: 63
                    pattern: ^[a-z][a-z0-9-]{1,61}[a-z0-9]$
                    type: string
                    x-kubernetes-validations:
                    - message: resource is immutable
                      rule: self == oldSelf
                    - message: resource must be 'namespaces' for now. This will change
                        in the future.
                      rule: self == 'namespaces'
                required:
                - apiGroup
                - name
                - resource
                type: object
              subjects:
                description: Subjects should be a map type with both kind+name as
                  a key
                items:
                  description: |-
                    SubjectBinding contains a reference to the object or user identities a role
                    binding applies to.
                  properties:
                    kind:
                      description: |-
                        Kind of subject being referenced. Values defined by this API group are
                        for now only "UpboundTeam".
                      enum:
                      - UpboundTeam
                      type: string
                      x-kubernetes-validations:
                      - message: kind must be 'UpboundTeam' for now. This will change
                          in the future.
                        rule: self == 'UpboundTeam'
                    name:
                      description: |-
                        Name (identifier) of the subject (of the specified kind) being referenced.
                        The identifier must be 2-100 chars, [a-zA-Z0-9-], no repeating dashes, can't start/end with a dash.
                        Notably, a UUID fits that format.
                      maxLength: 100
                      pattern: ^([a-zA-Z0-9]+-?)+[a-zA-Z0-9]$
                      type: string
                    role:
                      description: |-
                        Role this subject has on the associated Object.
                        The list of valid roles is defined for each target API resource separately.
                        For namespaces, valid values are "viewer", "editor", and "admin".
                        The format of this is essentially a RFC 1035 label with underscores instead of dashes, minimum three characters long.
                      maxLength: 63
                      pattern: ^[a-z][a-z0-9_]{1,62}[a-z0-9]$
                      type: string
                  required:
                  - kind
                  - name
                  - role
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - kind
                - name
                x-kubernetes-list-type: map
            required:
            - object
            - subjects
            type: object
          status:
            description: ObjectRoleBindingStatus is RoleBindings' status.
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
